openapi: 3.0.0
info:
  title: Order Management API
  version: 1.0.0
paths:
  /api/orders:
    post:
      summary: Place a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/orders/{orderId}:
    get:
      summary: Retrieve order details by order ID
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      summary: Cancel an order by order ID
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
  /api/customers/{customerId}/orders:
    get:
      summary: Retrieve order history for a specific user
      parameters:
        - name: customerId
          in: path
          description: ID of the customer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /api/customers:
    get:
      summary: Get a list of all customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: Add a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /api/customers/{id}:
    get:
      summary: Get details of a specific customer
      parameters:
        - name: id
          in: path
          description: ID of the customer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      summary: Update an existing customer
      parameters:
        - name: id
          in: path
          description: ID of the customer
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      summary: Delete a customer
      parameters:
        - name: id
          in: path
          description: ID of the customer
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
  /api/orders/{orderId}/tracking:
    get:
      summary: Retrieve real-time tracking information for an order
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracking'
    put:
      summary: Update the status and location of an order during delivery
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracking'
components:
  schemas:
    Order:
      type: object
      properties:
        orderId:
          type: integer
        customer:
          type: object
        courier:
          type: object
        deliveryAddress:
          type: string
        pickupAddress:
          type: string
        pickupDate:
          type: string
        status:
          type: string
    OrderInput:
      type: object
      properties:
        customer:
          type: object
        courier:
          type: object
        deliveryAddress:
          type: string
        pickupAddress:
          type: string
        pickupDate:
          type: string
        status:
          type: string
    Customer:
      type: object
      properties:
        customerId:
          type: integer
        name:
          type: string
        address:
          type: string
        phoneNumber:
          type: string
        email:
          type: string

    CustomerInput:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        phoneNumber:
          type: string
        email:
          type: string

    Tracking:
      type: object
      properties:
        trackingId:
          type: integer
        delivery:
          type: object
        status:
          type: string
        location:
          type: string

    TrackingInput:
      type: object
      properties:
        delivery:
          type: object
        status:
          type: string
        location:
          type: string
